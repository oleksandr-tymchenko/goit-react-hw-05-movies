{"version":3,"file":"static/js/918.1ef0cddc.chunk.js","mappings":"oSAGaA,EAAiBC,EAAAA,EAAAA,IAAH,+JAKX,qBAAGC,MAAkBC,QAAQC,KAA7B,IAIHC,EAAeJ,EAAAA,EAAAA,IAAH,2DAKZK,EAAaL,EAAAA,EAAAA,GAAH,4FAMVM,EAAeN,EAAAA,EAAAA,IAAH,sFACT,qBAAGC,MAAkBC,QAAQC,KAA7B,I,IAKeH,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,8DAEZ,qBAAGC,MAAkBC,QAAQC,KAA7B,I,4BCuEhB,EAnFqB,WAAO,IAAD,IACnBK,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC/CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGA,GAA0CF,EAAAA,EAAAA,UAAS,MAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAcA,IAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEHC,EAAAA,EAAAA,GAAU,SAAD,OAAUT,IAFhB,OAEhBU,EAFgB,OAItBJ,EAAiBI,GAJK,gDAMtBN,GAAW,GANW,yDAAH,qDAUvBI,GACD,GAAE,CAACR,IACCK,EAAL,CACA,IAAQM,EACNN,EADMM,MAAOC,EACbP,EADaO,KAAMC,EACnBR,EADmBQ,YAAaC,EAChCT,EADgCS,SAAUC,EAC1CV,EAD0CU,OAAQC,EAClDX,EADkDW,aAGpD,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIrB,EAAgBsB,QAA1B,SAAmC,oBAElCf,GACC,UAACgB,EAAA,EAAD,WAAc,kCAAgChB,MAE9C,iCACE,UAAClB,EAAD,YACE,SAACK,EAAD,WACE,gBACE8B,IACEP,EACIQ,kCAA0BR,EA1C9C,iHA6CcS,IAAI,MACJC,MAAM,MACNC,OAAO,WAIX,4BACE,wBAAKb,GAASC,KACd,yBAAG,eAAaa,KAAKC,KAAoB,GAAfV,GAAmB,QAC7C,wBAAI,cACJ,yBAAIF,EAAS,QACb,wBAAI,YACJ,uBACGC,GACCA,EAAOY,KAAI,SAAAC,GAAK,OACd,4BAAsBA,EAAMhB,KAAK,MAAtBgB,EAAMC,GADH,aAMxB,UAACrC,EAAD,YACE,wBAAI,4BACJ,UAACD,EAAD,YACE,yBACE,SAAC,KAAD,CAAM0B,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAIzB,SAACzB,EAAD,WACE,SAAC,EAAAsC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,aArDc,CA4D3B,C,sEClGYC,E,QAAS/C,EAAAA,IAAH,4L,SCCNiC,EAAe,SAAC,GAAkB,IAAhBe,EAAe,EAAfA,SAC7B,OACE,UAACD,EAAD,CAAQE,KAAK,QAAb,WACE,wBAAI,wBACJ,uBAAID,MAGT,C,+FCNKE,EACJ,6NACIC,EAAW,gCAAjB,SAEe5B,EAAU,EAAVA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAyB6B,EAAUC,GAAnC,uFACyBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBC,GAAY,CACzDC,QAAO,kBACFA,GADC,IAEJE,SAAU,UAEZC,QAAS,CACPC,cAAeP,EACfQ,OAAQ,sBARd,YACQC,EADR,iDAYWA,EAASnC,MAZpB,aAcU,IAAIoC,MAAM,mBAdpB,kEAuCA,MAEArC,EAAUsC,UAAY,CACpBT,SAAUU,IAAAA,OAAAA,WACVT,OAAQS,IAAAA,O","sources":["Pages/MovieDetails/MoviDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Outlet } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n  /* border-bottom: 1px solid black; */\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  margin-bottom: 10px;\n`;\n\nexport const ImgContainer = styled.div`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const InformList = styled.ul`\n  padding-left: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const AddContainer = styled.div`\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const OutletContainer = styled(Outlet)`\n  padding: 10px;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n`;\n","// import { useStateContext } from 'Context/StateContext';\nimport React, { Suspense, useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getMovies from 'servises/api';\nimport {\n  MovieContainer,\n  ImgContainer,\n  InformList,\n  AddContainer,\n} from './MoviDetails.styled';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { Loader } from 'components/Loader/Loader';\n\nconst defaultImg =\n  'https://st.depositphotos.com/1001877/1469/i/950/depositphotos_14695835-stock-photo-vintage-movie-camera-3d.jpg';\nconst baseImgUrl = 'https://image.tmdb.org/t/p/';\nconst posterSize = 'w400';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [isError, setIsError] = useState(false);\n\n  // const { searchedMovie, setSearchedMovie } = useStateContext();\n  const [searchedMovie, setSearchedMovie] = useState(null);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovies(`movie/${movieId}`);\n\n        setSearchedMovie(data);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n  if (!searchedMovie) return;\n  const { title, name, poster_path, overview, genres, vote_average } =\n    searchedMovie;\n\n  return (\n    <div>\n      <Link to={backLocationRef.current}> ‚óÄ Go back</Link>\n\n      {isError ? (\n        <ErrorMessage>There is no data to this movie {isError}</ErrorMessage>\n      ) : (\n        <>\n          <MovieContainer>\n            <ImgContainer>\n              <img\n                src={\n                  poster_path\n                    ? baseImgUrl + posterSize + poster_path\n                    : defaultImg\n                }\n                alt=\"img\"\n                width=\"200\"\n                height=\"290\"\n              ></img>\n            </ImgContainer>\n\n            <div>\n              <h2>{title || name}</h2>\n              <p>User Score: {Math.ceil(vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{overview} </p>\n              <h3>Genres</h3>\n              <p>\n                {genres &&\n                  genres.map(genre => (\n                    <span key={genre.id}>{genre.name} </span>\n                  ))}\n              </p>\n            </div>\n          </MovieContainer>\n          <AddContainer>\n            <h3>Additional information</h3>\n            <InformList>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </InformList>\n          </AddContainer>\n          <AddContainer>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </AddContainer>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const Messge = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  text-align: center;\n  font-size: 14px;\n  color: red;\n  font-weight: 700;\n  margin-top: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Messge } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <Messge role=\"alert\">\n      <h2>Oops! üò´</h2>\n      <p>{children}</p>\n    </Messge>\n  );\n};\nErrorMessage.propTypes = {\n  children: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDMzNGZmZTI2MzRlNmMyNjU2MjYzNmZhZWJiNCIsInN1YiI6IjY0ODYwNjIyZTM3NWMwMDBhY2M1ZTg5MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cLWIZByOdSNx37MEXIfJi9nkHOUBUllZd6OPDNf-0CA';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endpoint, params) {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      ...params,\n      language: 'en-US',\n    },\n    headers: {\n      Authorization: API_KEY,\n      Accept: 'application/json',\n    },\n  });\n  if (response) {\n    return response.data;\n  } else {\n    throw new Error('Smth went wrong');\n  }\n}\n// try {\n//   const response = await axios.get(\n//     `${BASE_URL}${endpoint}`,\n//     {\n//       params: {\n//         ...params,\n//         language: 'en-US',\n//         // include_adult: false,\n//       },\n//       headers: {\n//         Authorization: API_KEY,\n//         Accept: 'application/json',\n//       },\n//     }\n//   );\n//   console.log(response.data); // –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞\n//   return response.data;\n// } catch (error) {\n//   <ErrorMessage>There are no such images ... Try again {error}</ErrorMessage>;\n//   console.error(error);\n// }\n\nexport default getMovies;\n\ngetMovies.propTypes = {\n  endpoint: PropTypes.string.isRequired,\n  params: PropTypes.object,\n};\n"],"names":["MovieContainer","styled","theme","shadows","small","ImgContainer","InformList","AddContainer","Outlet","location","useLocation","backLocationRef","useRef","state","from","movieId","useParams","useState","isError","setIsError","searchedMovie","setSearchedMovie","useEffect","fetchMovieDetails","getMovies","data","title","name","poster_path","overview","genres","vote_average","to","current","ErrorMessage","src","baseImgUrl","alt","width","height","Math","ceil","map","genre","id","Suspense","fallback","Loader","Messge","children","role","API_KEY","BASE_URL","endpoint","params","axios","language","headers","Authorization","Accept","response","Error","propTypes","PropTypes"],"sourceRoot":""}