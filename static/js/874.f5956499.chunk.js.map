{"version":3,"file":"static/js/874.f5956499.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","Pages/Movies.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MoviesContainer/MoviesContainer.jsx","components/MoviesContainer/MovisContainer.styled.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n// import { Form, Field } from 'formik';\n\nexport const SearchbarWrap = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  color: #fff;\n\n  /* background-color: #3f51b5; */\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://www.svgrepo.com/download/508317/search.svg');\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  /* -------- */\n  /* background-color: teal; */\n  /* --------- */\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  /* outline: none; */\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  /* &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  } */\n`;\n","import {\n  SearchForm,\n  SearchFormBtn,\n  SearchFormBtnLabel,\n  SearchFormInput,\n  SearchbarWrap,\n} from './SearchBar.styled';\nimport { useStateContext } from 'Context/StateContext';\n\nexport default function SearchBar({ onSubmit }) {\n  const { setSearchParams } = useStateContext();\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    form.elements.searchQuery.value\n      ? setSearchParams({ query: form.elements.searchQuery.value })\n      : setSearchParams({});\n    form.reset();\n  };\n\n  return (\n    <SearchbarWrap>\n      <SearchForm onSubmit={onSubmitForm}>\n        <SearchFormBtn type=\"submit\">\n          <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n        </SearchFormBtn>\n        <SearchFormInput\n          name=\"searchQuery\"\n          autoFocus\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n        />\n      </SearchForm>\n    </SearchbarWrap>\n  );\n}\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport getMovies from 'servises/api';\nimport { MoviesContainer } from 'components/MoviesContainer/MoviesContainer';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useStateContext } from 'Context/StateContext';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\n\nconst Movies = () => {\n  const [isError, setIsError] = useState(false);\n  const [searchedMovies, setSearchedMovies] = useState([]);\n\n  const { searchParams } = useStateContext();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovies('search/movie', {\n          query: `${searchQuery}`,\n          include_adult: false,\n          page: 1,\n        });\n        setSearchedMovies([...data.results]);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [searchQuery]);\n\n  return (\n    <>\n      {isError && (\n        <ErrorMessage>Sorry, something wrong. {isError}</ErrorMessage>\n      )}\n\n      <SearchBar />\n      <MoviesContainer movies={searchedMovies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const Messge = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  text-align: center;\n  font-size: 14px;\n  color: red;\n  font-weight: 700;\n  margin-top: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Messge } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <Messge role=\"alert\">\n      <h2>Oops! üò´</h2>\n      <p>{children}</p>\n    </Messge>\n  );\n};\nErrorMessage.propTypes = {\n  children: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesList, MoviesWrap } from './MovisContainer.styled';\n\nexport const MoviesContainer = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesWrap>\n      <MoviesList>\n        {movies.map(({ id, title, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {name || title}\n              </Link>\n            </li>\n          );\n        })}\n      </MoviesList>\n    </MoviesWrap>\n  );\n};\nMoviesContainer.propTypes = {\n  movies: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesWrap = styled.div`\n  padding: 10px;\n\n  box-shadow: ${({ theme }) => theme.shadows.small};\n`;\n\nexport const MoviesList = styled.ul`\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDMzNGZmZTI2MzRlNmMyNjU2MjYzNmZhZWJiNCIsInN1YiI6IjY0ODYwNjIyZTM3NWMwMDBhY2M1ZTg5MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cLWIZByOdSNx37MEXIfJi9nkHOUBUllZd6OPDNf-0CA';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endpoint, params) {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      ...params,\n      language: 'en-US',\n    },\n    headers: {\n      Authorization: API_KEY,\n      Accept: 'application/json',\n    },\n  });\n  if (response) {\n    return response.data;\n  } else {\n    throw new Error('Smth went wrong');\n  }\n}\n// try {\n//   const response = await axios.get(\n//     `${BASE_URL}${endpoint}`,\n//     {\n//       params: {\n//         ...params,\n//         language: 'en-US',\n//         // include_adult: false,\n//       },\n//       headers: {\n//         Authorization: API_KEY,\n//         Accept: 'application/json',\n//       },\n//     }\n//   );\n//   console.log(response.data); // –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞\n//   return response.data;\n// } catch (error) {\n//   <ErrorMessage>There are no such images ... Try again {error}</ErrorMessage>;\n//   console.error(error);\n// }\n\nexport default getMovies;\n\ngetMovies.propTypes = {\n  endpoint: PropTypes.string.isRequired,\n  params: PropTypes.object,\n};\n"],"names":["SearchbarWrap","styled","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","SearchBar","onSubmit","setSearchParams","useStateContext","e","preventDefault","form","target","elements","searchQuery","value","query","reset","type","name","autoFocus","placeholder","autoComplete","useState","isError","setIsError","searchedMovies","setSearchedMovies","searchParams","get","useEffect","fetchMovieDetails","getMovies","include_adult","page","data","results","ErrorMessage","MoviesContainer","movies","Messge","children","role","location","useLocation","map","id","title","to","state","from","MoviesWrap","theme","shadows","small","MoviesList","API_KEY","BASE_URL","endpoint","params","axios","language","headers","Authorization","Accept","response","Error","propTypes","PropTypes"],"sourceRoot":""}