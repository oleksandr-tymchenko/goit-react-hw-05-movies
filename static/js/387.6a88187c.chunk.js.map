{"version":3,"file":"static/js/387.6a88187c.chunk.js","mappings":"qPAEaA,EAAUC,EAAAA,EAAAA,IAAH,6DACJ,qBAAGC,MAAkBC,QAAQC,KAA7B,IAIHC,EAAUJ,EAAAA,EAAAA,IAAH,6GAOPK,EAAYL,EAAAA,EAAAA,EAAH,mE,sECZTM,E,QAASN,EAAAA,IAAH,4L,SCCNO,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,UAACF,EAAD,CAAQG,KAAK,QAAb,WACE,wBAAI,wBACJ,uBAAID,MAGT,C,yGCRYE,EAAaV,EAAAA,EAAAA,IAAH,gEAGP,qBAAGC,MAAkBC,QAAQC,KAA7B,IAGHQ,EAAaX,EAAAA,EAAAA,GAAH,8C,kMCNVY,EAAOZ,EAAAA,EAAAA,EAAH,2FAMJa,EAAQb,EAAAA,EAAAA,GAAH,2CACH,qBAAGC,MAAkBa,UAAUC,MAA/B,I,mBC2Cf,EA3CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAgCE,EAAAA,EAAAA,KAAxBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEHC,EAAAA,EAAAA,GAAU,SAAD,OAAUZ,EAAV,YAA6B,CAAEa,KAAM,IAF3C,OAEhBC,EAFgB,OAGtBL,GAAYK,EAAKC,QAAQC,QACzBZ,EAAWU,EAAKC,SAJM,gDAMtBR,GAAW,GANW,yDAAH,qDAUvBI,GACD,GAAE,CAACX,EAASI,KAEX,+BACGD,GACCA,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAAC,KAAD,YACE,SAAC,IAAD,WACE,UAACvB,EAAD,WAAO,WAASsB,QAElB,SAACvB,EAAD,UAAOwB,MAJKF,EADJ,IAQbV,IACC,SAACjB,EAAA,EAAD,UAAc,kDAIfe,IACC,UAACf,EAAA,EAAD,WAAc,2BAAyBe,OAI9C,C,4EChDKe,EACJ,6NACIC,EAAW,gC,aAEjB,O,oBAAA,WAAyBC,EAAUC,GAAnC,uFACyBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBC,GAAY,CACzDC,QAAO,kBACFA,GADC,IAEJE,SAAU,UAEZC,QAAS,CACPC,cAAeP,EACfQ,OAAQ,sBARd,YACQC,EADR,iDAYWA,EAAShB,MAZpB,aAcU,IAAIiB,MAAM,mBAdpB,kEAuCA,IAzCA,SAEyB,EAAVnB,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C","sources":["components/Cast/Cast.styled.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MoviesContainer/MovisContainer.styled.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  padding: 5px;\n`;\n\nexport const ImgWrap = styled.div`\n  padding-top: 5px;\n  margin-bottom: 15px;\n  /* width: 100px;\n  height: 80px; */\n`;\n\nexport const Character = styled.p`\n  padding-left: 20px;\n  margin-top: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Messge = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  text-align: center;\n  font-size: 14px;\n  color: red;\n  font-weight: 700;\n  margin-top: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Messge } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <Messge role=\"alert\">\n      <h2>Oops! üò´</h2>\n      <p>{children}</p>\n    </Messge>\n  );\n};\nErrorMessage.propTypes = {\n  children: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesWrap = styled.div`\n  padding: 10px;\n\n  box-shadow: ${({ theme }) => theme.shadows.small};\n`;\n\nexport const MoviesList = styled.ul`\n  padding-left: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  padding-left: 20px;\n  margin-top: 10px;\n  font-style: italic;\n`;\n\nexport const Title = styled.li`\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n`;\n","import { useStateContext } from 'Context/StateContext';\nimport { Wrapper } from 'components/Cast/Cast.styled';\nimport { MoviesList } from 'components/MoviesContainer/MovisContainer.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovies from 'servises/api';\nimport { Text, Title } from './Reviews.styled';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const { reviews, setReviews } = useStateContext();\n  const [isError, setIsError] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovies(`movie/${movieId}/reviews`, { page: 1 });\n        setIsEmpty(!data.results.length);\n        setReviews(data.results);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId, setReviews]);\n  return (\n    <section>\n      {reviews &&\n        reviews.map(({ id, author, content }) => (\n          <Wrapper key={id}>\n            <MoviesList>\n              <Title>Author: {author}</Title>\n            </MoviesList>\n            <Text>{content}</Text>\n          </Wrapper>\n        ))}\n      {isEmpty && (\n        <ErrorMessage>\n          We don't have any revievs for this movie yet.\n        </ErrorMessage>\n      )}\n      {isError && (\n        <ErrorMessage>Sorry, something wrong. {isError}</ErrorMessage>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDMzNGZmZTI2MzRlNmMyNjU2MjYzNmZhZWJiNCIsInN1YiI6IjY0ODYwNjIyZTM3NWMwMDBhY2M1ZTg5MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cLWIZByOdSNx37MEXIfJi9nkHOUBUllZd6OPDNf-0CA';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endpoint, params) {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      ...params,\n      language: 'en-US',\n    },\n    headers: {\n      Authorization: API_KEY,\n      Accept: 'application/json',\n    },\n  });\n  if (response) {\n    return response.data;\n  } else {\n    throw new Error('Smth went wrong');\n  }\n}\n// try {\n//   const response = await axios.get(\n//     `${BASE_URL}${endpoint}`,\n//     {\n//       params: {\n//         ...params,\n//         language: 'en-US',\n//         // include_adult: false,\n//       },\n//       headers: {\n//         Authorization: API_KEY,\n//         Accept: 'application/json',\n//       },\n//     }\n//   );\n//   console.log(response.data); // –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞\n//   return response.data;\n// } catch (error) {\n//   <ErrorMessage>There are no such images ... Try again {error}</ErrorMessage>;\n//   console.error(error);\n// }\n\nexport default getMovies;\n"],"names":["Wrapper","styled","theme","shadows","small","ImgWrap","Character","Messge","ErrorMessage","children","role","MoviesWrap","MoviesList","Text","Title","fontSizes","medium","movieId","useParams","useStateContext","reviews","setReviews","useState","isError","setIsError","isEmpty","setIsEmpty","useEffect","fetchMovieDetails","getMovies","page","data","results","length","map","id","author","content","API_KEY","BASE_URL","endpoint","params","axios","language","headers","Authorization","Accept","response","Error"],"sourceRoot":""}