{"version":3,"file":"static/js/6.21af65dc.chunk.js","mappings":"kPAgCA,UA3Ba,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,GAAU,mBAAoB,CAAC,GAFtD,OAEUC,EAFV,OAGIL,GAAU,OAAIK,EAAKC,UAHvB,gDAKIJ,GAAW,GALf,0DADc,uBAAC,WAAD,wBAUdK,EACD,GAAE,KAED,gCACGN,IACC,UAAC,IAAD,WAAc,2BAAyBA,MAEzC,wBAAI,oCACJ,SAAC,IAAD,CAAiBF,OAAQA,IAAU,MAGxC,C,sEC5BYS,E,QAASC,EAAAA,IAAH,4L,SCCNC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,UAACH,EAAD,CAAQI,KAAK,QAAb,WACE,wBAAI,wBACJ,uBAAID,MAGT,C,kGCPYE,EAAkB,SAAC,GAAgB,IAAdd,EAAa,EAAbA,OAC1Be,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,IAAD,WACE,SAAC,IAAD,UACGhB,EAAOiB,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SACGK,GAAQD,KAFJD,EAMZ,OAIR,C,yGClBYM,EAAad,EAAAA,EAAAA,IAAH,gEAGP,qBAAGe,MAAkBC,QAAQC,KAA7B,IAGHC,EAAalB,EAAAA,EAAAA,GAAH,8C,4ECNjBmB,EACJ,6NACIC,EAAW,gC,aAEjB,O,oBAAA,WAAyBC,EAAUC,GAAnC,uFACyBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBC,GAAY,CACzDC,QAAO,kBACFA,GADC,IAEJE,SAAU,UAEZC,QAAS,CACPC,cAAeP,EACfQ,OAAQ,sBARd,YACQC,EADR,iDAYWA,EAAShC,MAZpB,aAcU,IAAIiC,MAAM,mBAdpB,kEAuCA,IAzCA,SAEyB,EAAVlC,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C","sources":["Pages/Home.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MoviesContainer/MoviesContainer.jsx","components/MoviesContainer/MovisContainer.styled.jsx","servises/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport React from 'react';\nimport getMovies from 'servises/api';\nimport { MoviesContainer } from 'components/MoviesContainer/MoviesContainer';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const data = await getMovies('trending/all/day', {});\n        setMovies([...data.results]);\n      } catch (error) {\n        setIsError(true);\n      }\n    }\n\n    fetchMovies();\n  }, []);\n  return (\n    <>\n      {isError && (\n        <ErrorMessage>Sorry, something wrong. {isError}</ErrorMessage>\n      )}\n      <h1> The best daily movies for you</h1>\n      <MoviesContainer movies={movies} />;\n    </>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Messge = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  text-align: center;\n  font-size: 14px;\n  color: red;\n  font-weight: 700;\n  margin-top: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Messge } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <Messge role=\"alert\">\n      <h2>Oops! üò´</h2>\n      <p>{children}</p>\n    </Messge>\n  );\n};\nErrorMessage.propTypes = {\n  children: PropTypes.array,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { MoviesList, MoviesWrap } from './MovisContainer.styled';\n\nexport const MoviesContainer = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesWrap>\n      <MoviesList>\n        {movies.map(({ id, title, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {name || title}\n              </Link>\n            </li>\n          );\n        })}\n      </MoviesList>\n    </MoviesWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesWrap = styled.div`\n  padding: 10px;\n\n  box-shadow: ${({ theme }) => theme.shadows.small};\n`;\n\nexport const MoviesList = styled.ul`\n  padding-left: 20px;\n`;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDMzNGZmZTI2MzRlNmMyNjU2MjYzNmZhZWJiNCIsInN1YiI6IjY0ODYwNjIyZTM3NWMwMDBhY2M1ZTg5MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cLWIZByOdSNx37MEXIfJi9nkHOUBUllZd6OPDNf-0CA';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endpoint, params) {\n  const response = await axios.get(`${BASE_URL}${endpoint}`, {\n    params: {\n      ...params,\n      language: 'en-US',\n    },\n    headers: {\n      Authorization: API_KEY,\n      Accept: 'application/json',\n    },\n  });\n  if (response) {\n    return response.data;\n  } else {\n    throw new Error('Smth went wrong');\n  }\n}\n// try {\n//   const response = await axios.get(\n//     `${BASE_URL}${endpoint}`,\n//     {\n//       params: {\n//         ...params,\n//         language: 'en-US',\n//         // include_adult: false,\n//       },\n//       headers: {\n//         Authorization: API_KEY,\n//         Accept: 'application/json',\n//       },\n//     }\n//   );\n//   console.log(response.data); // –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞\n//   return response.data;\n// } catch (error) {\n//   <ErrorMessage>There are no such images ... Try again {error}</ErrorMessage>;\n//   console.error(error);\n// }\n\nexport default getMovies;\n"],"names":["useState","movies","setMovies","isError","setIsError","useEffect","getMovies","data","results","fetchMovies","Messge","styled","ErrorMessage","children","role","MoviesContainer","location","useLocation","map","id","title","name","to","state","from","MoviesWrap","theme","shadows","small","MoviesList","API_KEY","BASE_URL","endpoint","params","axios","language","headers","Authorization","Accept","response","Error"],"sourceRoot":""}